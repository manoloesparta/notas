System on a chip: Combinacion de los diferentes componentes que hacen el computador, CPU, RAM, perifericos, BIOS, radio, GPU etc...

Los celulares tambien son unos system on a chip pero tienen componentes que no tienen las computadoras, por ejemplo la bateria, CPU para la bateria, pantalla, inputs (botones, sensores)

Que pasa cuando envias un email?
Escribes el mensajes y le presionas enter para enviarlo ->
el teclado manda un señal a la tarjeta madre (motherboard) ->
la señal es intervenida por el CPU que es lo que se encarga de operaciones dentro del computador ->
el CPU manda la señal al sistema operativo que el teclado fue presionado ->
el sistema operativo entiende que es un enter, lo procesas con drivers (capaz de software diseñadas para entender las señales electricas de dispositivos externos de hardware) ->
el sistema operativo el manda a señal al a la aplicacion desde la cual esta mandando el correo (google chrome) ->
el navegador ejecuta tecnologias de frontend ->
mandamos una señal con javascript, crea un evento ->
javascript usa un API, asi ejecuta AJAX que envia lo que sea un servidor sin recargar el navegador ->
los manda en un formato especial que es JSON ->
el metodo con el que envian la informacion al servidor es con un API REST ->
tiene que mandar por un tubo ahi usamos HTTP (el protocolo del internet) y ahora el archivo dejo de estar en nuestro computador para pasar al internet ->
ahora se ejecuta un archivo dentro de la pagina, digamos https://email.com/enviar_email lo se analiza asi ->
http o https empieza una conexion con el internet ->
sigue el dominio que nos manda al DNS ->
y al final del URL tenemos una instruccion que no siempre son asi de simples sino como caracteres al azar ->
una vez que estamos en el DNS interpreta el domain nos va devolver una IP ->
la IP es la direccion de la computadora a la cual te vas a conectar para accesar a la pagina ->
una vez encontrada la IP mandamos una peticion a una servidor que es uno varios o computadores ->
le mandamos una señal electrica al computador (Linux) y por medio de unos drivers lo interpreta la electricidad en una capa de red asi conocemos a Ethernet ->
ethernet manda la señal a linux lo convierte en datos encapsulados en un protocolo TCP/IP en el cual se transmite todo en internet ->
luego esos datos pasan por http y hace que los navegadores se conecten ->
el http es recibido por un servidor de http dentro de linux (apache o nginx) ->
y esas señales son procesadas por algun lenguaje de programacion (java) ->
el mismo lenguaje guarda esos mails en una base de datos ->
ahora le toca procesar a quien le va mandar con el email (manuel@gmail.com) ->
una direccion de email es casi como un domain (.com) ->
los emails usan protocoles SMTP (enviar) y POP3 (recibir) ->
cuando se manda de un mismo servicio osea de gmail para gmail solo se hace un cambio en la base de datos y no se pasa por los protocolos ->
pero cuando es a un servicio distinto se manda a otro servidor (postfix) el cual interpreta para quien es, lo guarda en la base de datos y envia una notificacion ->
fin

AJAX = Asynchronous Javascript and XML
JSON = Javascript object notation
REST = Representational State Transfer
HTTP(S) = Hypertext Transfer Protocol (Secure)
SSH = Secure shell
FTP = File transfer protocol
BitTorrent = Otro protocolo
DNS = Domain Name System
