Linux es un OS, basado en UNIX, y tenemos que entender la arquitectura para entender linux

binario = programa

Una de las cosas más importantes que debemos entender es la estructura de archivos, el directorio raíz es /

Directorios importantes:

/home, se almacenan los archivos de cada usuario.

/lib, almacenas las librerías del sistema, y ahora tambien genera dos mas que son /lib32 y /lib64

/mnt, cuando montamos en el sistema dispositivos, los podemos ver en esta carpeta. tambien se puede ver como /media, aqui aparecera los dispositivos externes que conectes (dev)

/opt, almacenas los programas instalados de terceros.

/root, almacena los archivos del super usuario Root, este directorio tiene permisos y un /home diferente, root arranca con el os principal

/sbin, archivos binarios del administrador, tambien como /bin, la diferencia es el $PATH, /sbin es para el root

/usr, programas instalados por defecto.

/var, se utiliza para guardar archivos de logs, backups, servidor web, cache

/etc, archivos de configuración del sistema.

/boot, guarda los archivos del arranque del sistema.

TODO LINUX ES UN ARCHIVO

Tipos de particiones

Existen dos tipos de tablas de particiones:

La tradicional que permite 4 particiones primarias y muchas lógicas (las particiones lógicas sirven como contenedores para más particiones).

gpt que permite tener muchas más particiones.

Crear partición

Ejecutamos fdisk /dev/xvd para ingresar al disco.
Creamos una nueva partición con n
Sí es la primera partición debemos crear una primaria, usamos el comando p
Seleccionamos el tamaño de la partición, diciendole +20G

Cambiar tipo de partición

Ejecutamos fdisk /dev/xvd para ingresar al disco.
Seleccionamos el número de la partición.
Seleccionamos t
Elegimos el número del tipo de partición.

Eliminar partición

Entramos a fdisk especificando el disco duro.
Usamos el comando d
Seleccionamos la partición.
Guardamos cambios con w

Guardar los cambios

Con w guardamos los cambios que realizamos, si salimos sin guardar la configuración que hacemos no se va a escribir en el disco.

Ver tabla de particiones

Con el comando fdisk -l podemos ver cómo estan distribuidas las particiones.

Formatear particiones

El comando mkfs nos permite formatear una partición usando el sistema de archivos que queramos. Si ponemos mkfs y tab 2 veces nos muestra todas las posibles maneras de formatear

Formato con FAT32:
$mkfs.vfat /dev/xvdf1 

Formato con EXT3:
$mkfs.ext3 /dev/xvdf5

Formato con EXT4:
$mkfs.ext4 /dev/xvdf6 

Formato con XFS:
$mkfs.xfs /dev/xvdf6

Usar a bander -f obliga a formatear la particion

Montar las particiones:
Debemos crear un directorio por cada partición que deseamos montar, en este caso usamos tmp dentro de esta carpeta podemos ejecutar:

$mkdir xvdf1  
$mkdir xvdf3  
$mount /dev/xvdf1 /tmp/xvdf1  
$mount /dev/xvdf3 /tmp/xvdf3

Si no formateamos no podemos montar las particiones

Desmontar una partición:
Para poder desmontar una partición, debes no estar sobre la partición.Puedes ejecutar el comando:

$unmount /tmp/xvdf1

En este caso /tmp/xvdf1 es donde tenemos montada la partición.

Listar puntos de montaje:
El comando $df -h nos lista los directorios que están montados y el espacio que tienen disponible.

Montar particiones automaticamente:
Sí queremos montar las particiones de forma automatica podemos ir al archivo /etc/fstab, añadimos:

/dev/xvdf3    /var_new    ext4    defaults,discard    0	0

Creamos la carpeta var_new y si todo salio bien solo necesitamos ejecutar el comando $mount /var_new/ para que se monte la particion

$wipefs -a /dev/sdb1 quita las firmas que esten sobre el dispositivo externo

Administración swap en Linux

Memoria swap es un reemplazo a la memoria RAM, es lenta por estar en el disco duro, instalar RAM siempre va ser mejor soluion que usar swap

El area de intercambio o partición swap, es muy útil para máquinas que tienen muy poca memoria RAM.

Ver memoria y swap:
Con el comando $free podemos ver el uso de la memoria y swap.
También podemos utilizar el comando $htop, pero este lo debemos instalar.

Crear partición swap:
Entramos al disco con $fdisk /dev/xvdf
Podemos eliminar una partición o cambiarle el tipo
Seleccionamos el tipo 82
Guardamos con w
#si el programa sale un error, desmontamos la particion, entras a ella con fdisk y solo sales con w para que se guarden los cambios
Formateamos la partición con $mkswap /dev/xvdf5

Una vez creada podemos activarla con $swapon /dev/xvdf5, no la podemos usar si no la hemos formateado ($mkswap), seleccionando la partición a la que le dimos formato swap.

Para generar imagenes del disco duro (backups)

Crear imágenes con $dd:

$dd nos permite sacar una imágen completa del disco duro, para realizar la imagen.

Primero debemos estar seguros que tenemos la partición desmontada.

Usamos el comando:

$dd if=/dev/xvdf6 of=/var_new/backup/backup_xvdf7 bs=1MB  

if es la partición que deseamos hacer la imágen,
of donde se va a guardar la imágen, bs son de que tamaño va a ser los paquetes de informacion, y count es otro parametro que dice cuantos paquetes va querer

Montar una imagen con loop:

$partprobe hace que el os escane el disco buscando particiones, por si no aparecen despuesde hacerlas

Primero debemos activar el módulo del kernel con modprobe loop.
Una vez activo, creamos una carpeta donde vamos a montar la imágen, con $mkdir /tmp/iso_debian recuerda puedes seleccionar la ruta que desees.

Ahora con el comando $mount debian.iso /tmp/iso_debian -o loop estamos montando la imágen.

Recuerda debes estar seguro de la ruta del archivo, puedes ir autocompletando la ruta con tab

Escribir un archivo lleno de ceros:

En linux existe una ruta /dev/zero esta siempre va a devolver cero.

Podemos crear el archivo con

$dd if=/dev/zero of=zeros100M bs=1M count=100

Leer un archivo para medir la velocidad del disco:

En Linux existe una ruta /dev/null la cual todo lo que enviemos va a desaparecer.

Tambien existe /dev/zero que solo hay ceros

Podemos medir la velocidad de un disco leyendo un archivo, enviando la información a null con:

$dd if=zeros100M of=/dev/null

Recuerda: con el comando sync sincronizas el disco duro.

Arranque de sistema

Es una pieza fundamental para poder tener un sistema, puede que el software y particiones esten bien pero si el arranque de sistema esta mal, no va servir

Se puede arrancar con de dos maneras:

MBR: Master Boot Record, 512 bytes al incio del disco/particion de arranque, eso nos identifica donde esta kernel, drivers y mas

UEFI: Unified Extensible Firmware Interface, sirve para tener un arranque seguro porque antes se ponian viruses en el arranque, primero arranca y luega checa cada seccion.

Administar particiones en GPT

Cuando intentamos aplicar esto sobre una particion MBR no se podra y destruira todo el material

Saber tipo de tabla de particiones

Con fdisk -l /dev/xvda, muestra el tipo de la tabla de partición.

Tabla de particiones GPT

GPT permite tener 128 particiones en un disco duro.
gdisk es un comando especial para particiones GPT.

Crear particiones con gdisk

Usamos el comando gdisk /dev/xvdh para acceder a configurar las particiones del disco. Recuerda debes seleccionar el disco que deseas configurar.
Usamos la opción n para crear una nueva, y seleccionamos el número de la partición.
Asignamos el tamaño de la partición en este caso +1G
Seleccionamos el tipo de partición, por ejemplo 8300 para cargar tipo Linux filesystem

Dentro de particiones GPT pueden haber hasta 128 particiones, pero en uno disco MBR solo pueden haber 4 particiones y adentro de cada una de esas pueden haber particiones logicas

Administrar el arraque del sistema GRUB

El GRUB (GNU GRand Unified Bootloader) es gestor de arranque, que permite cargar el kernel y el sistema.

Archivos de configuración

En la carpeta /etc/grub.d vemos los archivos del grub.
/boot/grub/grub.cfg es el archivo de configuración, pero no modifiques este archivo, para configurarlo usa /etc/grub.d
El grub se coloca en el MBR, que esta en los primeros 512 Bytes del disco.

Backup del MBR

Podemos generar un backgrup del MBR con dd
dd if=/dev/xvda of=/root/mbr_backup bs=512 count=1

Actualizar grub

update-grub2  

Instalar grub

grub-install /dev/xvdf

Administrar discos duros con LVM

LVM nos permite realizar una configuración de discos duros que nos permita administrar el espacio de almacenamiento del servidor.

Instalación

apt-get install lvm2 

Crear volúmenes físicos

Primero debemos agregar los discos físicos que vamos a usar para crear el LVM, para esto debemos formatear la partición a usar con tipo 8e

$pvcreate /dev/xvdf3, agrega la partición a los volúmenes físicos del LVM

$pvs listar los discos en los volúmenes lógicos

Grupos

$vgcreate databases /dev/xvdf3, se agrega la partición a un grupo

$vgs listar los grupos

$vgreduce databases /dev/xvdg remueve una partición del grupo

Volumenes lógicos

lvcreate -n postgres -L 10g databases, crea una partición usando el espacio de un grupo

Extender tamaño de la partición

$lvextend -L+10G /dev/databases/posgress
$resize2fs /dev/databases/posgress 

Apagar servidores de forma remota

Los administradores de servidores normalmente deben apagar servidores de forma remota, recuerda:

Revisar en cual servidor estas conectado
Linux no preguntar confirmación

Es diferente apagar y reiniciar
Comandos
$shutdown -r now reinia la máquina
$shutdown -h now apagar la máquina
$systemctl reboot reiniciar
